<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapiniu.demo.springbootdocker.dao.LxmUserDAO">
  <resultMap id="BaseResultMap" type="com.hapiniu.demo.springbootdocker.entity.LxmUser">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserName" jdbcType="VARCHAR" property="userName" />
    <result column="UserPassword" jdbcType="VARCHAR" property="userPassword" />
    <result column="Creater" jdbcType="VARCHAR" property="creater" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Updater" jdbcType="VARCHAR" property="updater" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Status" jdbcType="BIT" property="status" />
    <result column="WechatUnionID" jdbcType="VARCHAR" property="wechatUnionID" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, UserName, UserPassword, Creater, CreateTime, Updater, UpdateTime, `Status`, WechatUnionID
  </sql>
  <select id="selectByExample" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lxm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lxm_user
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lxm_user
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUserExample">
    delete from lxm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUser" useGeneratedKeys="true">
    insert into lxm_user (UserName, UserPassword, Creater, 
      CreateTime, Updater, UpdateTime, 
      `Status`, WechatUnionID)
    values (#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{wechatUnionID,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUser" useGeneratedKeys="true">
    insert into lxm_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        UserName,
      </if>
      <if test="userPassword != null">
        UserPassword,
      </if>
      <if test="creater != null">
        Creater,
      </if>
      <if test="createTime != null">
        CreateTime,
      </if>
      <if test="updater != null">
        Updater,
      </if>
      <if test="updateTime != null">
        UpdateTime,
      </if>
      <if test="status != null">
        `Status`,
      </if>
      <if test="wechatUnionID != null">
        WechatUnionID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="wechatUnionID != null">
        #{wechatUnionID,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUserExample" resultType="java.lang.Long">
    select count(*) from lxm_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lxm_user
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        UserName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        UserPassword = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        Creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        Updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `Status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.wechatUnionID != null">
        WechatUnionID = #{record.wechatUnionID,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lxm_user
    set Id = #{record.id,jdbcType=INTEGER},
      UserName = #{record.userName,jdbcType=VARCHAR},
      UserPassword = #{record.userPassword,jdbcType=VARCHAR},
      Creater = #{record.creater,jdbcType=VARCHAR},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      Updater = #{record.updater,jdbcType=VARCHAR},
      UpdateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      `Status` = #{record.status,jdbcType=BIT},
      WechatUnionID = #{record.wechatUnionID,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUser">
    update lxm_user
    <set>
      <if test="userName != null">
        UserName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        UserPassword = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        Creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        Updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `Status` = #{status,jdbcType=BIT},
      </if>
      <if test="wechatUnionID != null">
        WechatUnionID = #{wechatUnionID,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiniu.demo.springbootdocker.entity.LxmUser">
    update lxm_user
    set UserName = #{userName,jdbcType=VARCHAR},
      UserPassword = #{userPassword,jdbcType=VARCHAR},
      Creater = #{creater,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      Updater = #{updater,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      `Status` = #{status,jdbcType=BIT},
      WechatUnionID = #{wechatUnionID,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>